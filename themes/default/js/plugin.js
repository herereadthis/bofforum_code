// Generated by CoffeeScript 1.3.3
(function() {

  (function(jQuery) {
    var $, methods, settings;
    $ = jQuery;
    settings = {
      variableName: true,
      message: "hello world!",
      formCategories: "#form_categories",
      categoryMenu: "#category_menu"
    };
    methods = {
      init: function(options) {
        return this.each(function() {
          var $this;
          $.extend(settings, options);
          $this = $(this);
          return methods.categoryMenu(settings.categoryMenu);
        });
      },
      getUrlQueries: function() {
        var decode, match, pl, query, search, urlParams;
        pl = /\+/g;
        search = /([^&=]+)=?([^&]*)/g;
        decode = function(s) {
          return decodeURIComponent(s.replace(pl, " "));
        };
        query = window.location.search.substring(1);
        urlParams = {};
        while ((match = search.exec(query))) {
          urlParams[decode(match[1])] = decode(match[2]);
        }
        return urlParams;
      },
      categoryMenu: function(categoryMenu) {
        var $catExpand, $catUl, catClass, catName, catString, categoryVal, urlParams;
        $catUl = $(categoryMenu).find('ul');
        $catExpand = $(categoryMenu).find('p').find('a');
        urlParams = methods.getUrlQueries();
        categoryVal = urlParams.category;
        if (categoryVal != null) {
          console.log("" + categoryVal + " !!");
          catClass = ".cat_" + categoryVal;
          catName = $catUl.find(catClass).find('a').html();
          catString = "Viewing: " + catName + " ";
          $catExpand.html(catString).append($('<span />').html('&#9661;'));
        }
        $(categoryMenu).on('click', 'p a', function(e) {
          var ulAriaState;
          e.preventDefault();
          ulAriaState = $catUl.attr('aria-expanded');
          if (ulAriaState === 'false') {
            $catUl.attr('aria-expanded', true);
            $(this).find('span').html('&#9651;');
          }
          if (ulAriaState === 'true') {
            $catUl.attr('aria-expanded', false);
            return $(this).find('span').html('&#9661;');
          }
        });
        return $catUl.on('click', 'a', function(e) {
          e.preventDefault();
          categoryVal = parseInt($(this).data('category'), 10);
          if (categoryVal === 0) {
            return window.location.href = "./?mode=index";
          } else {
            return window.location.href = "./?mode=index&category=" + categoryVal;
          }
        });
      },
      categorySelect: function(formCategories) {
        console.log("foo");
        return $(formCategories).on('change', 'select', function() {
          $(formCategories).submit();
          return console.log("oiuhjnk");
        });
      }
    };
    return $.fn.pluginName = function(method) {
      if (methods[method]) {
        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
      } else if (typeof method === 'object' || !method) {
        return methods.init.apply(this, arguments);
      } else {
        return $.error('Method ' + method + ' does not exist on jQuery.pluginName');
      }
    };
  })(jQuery);

}).call(this);
